/**
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
 * The first ten terms would be:
 *
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 *
 * Let us list the factors of the first seven triangle numbers:
 *
 * 1: 1
 * 3: 1, 3
 * 6: 1,2,3,6
 * 10: 1,2,5,10
 * 15: 1,3,5,15
 * 21: 1,3,7,21
 * 28: 1,2,4,7,14,28
 *
 * We can see that 28 is the first triangle number to have over five divisors.
 *
 * What is the value of the first triangle number to have over five hundred divisors?
 */
class Problem12{
    fun solve(): Long {
        // val n = 1000
        // val triangleNumber = 1000 * (1000 + 1) / 2

        for(n in 2000L .. 10000000L){
            val triangleNumber = n * (n + 1L) / 2L
            var counter = 0

            for (i in 1L .. 500L){
                if(triangleNumber%i == 0L){
                    ++counter
                }
            }

            // println(counter)
            if(counter == 500){
                return triangleNumber
            }
        }

        return 0
    }
}